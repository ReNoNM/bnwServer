/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Buildings {
  created_at: Generated<Timestamp | null>;
  data: Generated<Json | null>;
  id: Generated<string>;
  level: number;
  map_cell_id: string;
  owner_player_id: string;
  type: string;
  updated_at: Generated<Timestamp | null>;
}

export interface ChatMessages {
  id: Generated<string>;
  message: string;
  metadata: Generated<Json | null>;
  receiver_id: string | null;
  sender_id: string;
  timestamp: Int8;
  type: string;
}

export interface Map {
  building_id: string | null;
  id: Generated<string>;
  is_capital: Generated<boolean | null>;
  label: Generated<string | null>;
  metadata: Generated<Json | null>;
  owner_player_id: string | null;
  type: string;
  type_id: number;
  world_id: string;
  x: number;
  y: number;
}

export interface MapVisibility {
  first_seen_at: Generated<Timestamp | null>;
  id: Generated<string>;
  last_seen_at: Generated<Timestamp | null>;
  map_cell_id: string;
  player_id: string;
  status: string;
}

export interface Players {
  created_at: Generated<Timestamp | null>;
  email: string;
  id: Generated<string>;
  last_login: Timestamp | null;
  main_world_id: string | null;
  password: string;
  settings: Generated<Json | null>;
  status: Generated<string | null>;
  tag: string | null;
  tag_position: string | null;
  username: string;
}

export interface SpawnPointsOffers {
  consumed: Generated<boolean | null>;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  player_id: string;
  points: Json;
  world_id: string;
}

export interface Tokens {
  device_info: Generated<Json | null>;
  expires_at: Int8;
  id: Generated<string>;
  issued_at: Int8;
  revoked: Generated<boolean | null>;
  token: string;
  user_id: string;
}

export interface Worlds {
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  is_open: Generated<boolean | null>;
  name: string;
  players: Generated<string[] | null>;
  settings: Generated<Json | null>;
  size_x: number;
  size_y: number;
  updated_at: Generated<Timestamp | null>;
  world_type: string;
}

export interface DB {
  buildings: Buildings;
  chat_messages: ChatMessages;
  map: Map;
  map_visibility: MapVisibility;
  players: Players;
  spawn_points_offers: SpawnPointsOffers;
  tokens: Tokens;
  worlds: Worlds;
}
